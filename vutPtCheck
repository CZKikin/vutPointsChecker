#!/usr/bin/python3
import json
import urllib
import urllib.request
import getpass
import re

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

user = input("Username: ")
passwd = getpass.getpass()

# create a password manager
password_mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()

# If we knew the realm, we could use it instead of None.
top_level_url = "https://wis.fit.vutbr.cz/FIT/st"
password_mgr.add_password(None, top_level_url, user, passwd)

handler = urllib.request.HTTPBasicAuthHandler(password_mgr)

# create "opener" (OpenerDirector instance)
opener = urllib.request.build_opener(handler)

# use the opener to fetch a URL
try:
    opener.open("https://wis.fit.vutbr.cz/FIT/st/get-coursesx.php?json=1&sem=Z")
except:
    print(f"{bcolors.FAIL}Bad username || passord{bcolors.ENDC}")
    exit(1);

# Install the opener.
# Now all calls to urllib.request.urlopen use our opener.
urllib.request.install_opener(opener)
r = urllib.request.urlopen("https://wis.fit.vutbr.cz/FIT/st/get-coursesx.php?json=1&sem=Z")

data = r.read()
data = data.decode('utf-8')
data = json.loads(data)
data = data["data"]

for i in data:
    print(f'{bcolors.HEADER}{i["abbrv"]}{bcolors.ENDC}:')
    try:
        grade = i["grade"].strip()
    except:
        grade = "Unknown"
    print(f'    Grade: {grade}') 

    if grade != "4F" and grade != "Unknown":
        print(f'    {bcolors.OKGREEN}[✔]You did it. Enjoy your well desired rest.{bcolors.ENDC}')
        continue;

    for f in i["items"]:
        if f["type"] == "credit":
            print(f'    [i]Points: {i["points"]}')
            try:
                print(f'    [i]Min points for credit: {f["min"]}')
                if i["points"] > f["min"]:
                    print(f"    {bcolors.OKGREEN}[½]Enough points for credit{bcolors.ENDC}")
            except:
                pass

        if re.match(r".*projekt.*", f["title"], re.IGNORECASE):
            if not re.match(r".*předchoz.*", f["title"], re.IGNORECASE):
                print(f"    {bcolors.WARNING}[!]Potencional requirement: {f['title']}{bcolors.ENDC}")
